---
apiVersion: v1
kind: Namespace
metadata:
  name: git
---
kind: Service
apiVersion: v1
metadata:
  labels:
    app: gitea
  name: gitea-web
  namespace: git
spec:
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app: gitea
---
# Redirect to https
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: https-redirect
  namespace: git
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: gitea-web
  namespace: git
spec:
  entryPoints:
    - web
    - websecure
  routes:
    - match: Host(`gitea.flight.kja.us`)
      kind: Rule
      middlewares:
        - name: https-redirect
          namespace: git
      services:
        - name: gitea-web
          namespace: git
          port: 3000
          kind: Service
          scheme: http
---
kind: Service
apiVersion: v1
metadata:
  labels:
    app: cgit
  name: cgit-web
  namespace: git
spec:
  ports:
    - port: 3001
      targetPort: 80
  selector:
    app: gitea
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: cgit
  namespace: git
spec:
  entryPoints:
    - web
    - websecure
  routes:
    - match: Host(`cgit.flight.kja.us`)
      kind: Rule
      middlewares:
        - name: https-redirect
          namespace: git
      services:
        - name: cgit-web
          namespace: git
          port: 3001
          kind: Service
          scheme: http
---
kind: Service
apiVersion: v1
metadata:
  labels:
    app: gitea
  name: gitea-ssh
  namespace: git
spec:
  ports:
    - port: 2022
      targetPort: 2022
  selector:
    app: gitea
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRouteTCP
metadata:
  name: gitea-ssh
  namespace: git
spec:
  entryPoints:
    - giteassh
  routes:
    - match: HostSNI(`*`)
      services:
        - name: gitea-ssh
          namespace: git
          port: 2022
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitea-data-claim
  namespace: git
  labels:
    app: gitea
spec:
  storageClassName: openebs-hostpath
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: git-configmap
  namespace: git
data:
  config_cgitrc: |
    # Show owner on index page
    enable-index-owner=1

    # Allow http transport git clone
    enable-http-clone=0

    # Show extra links for each repository on the index page
    enable-index-links=1

    # Enable blame page and create links to it from tree page
    enable-blame=1

    # Enable ASCII art commit history graph on the log pages
    enable-commit-graph=1

    # Show number of affected files per commit on the log pages
    enable-log-filecount=1

    # Show number of added/removed lines per commit on the log pages
    enable-log-linecount=1

    # Sort branches by date
    branch-sort=age

    # Enable caching of up to 1000 output entries
    cache-size=0

    # Allow download of tar.xz and zip-files
    snapshots=tar.xz zip

    # Enable statistics per week, month and quarter
    max-stats=quarter

    # Set the title and heading of the repository index page
    root-title=Git repository browser

    # Set a subheading for the repository index page
    root-desc=a fast webinterface for the git dscm

    # Add a cgit favicon
    favicon=/favicon.ico

    # Use a custom logo
    logo=/cgit.png

    # Specify the css url
    css=/cgit.css

    # if you do not want that webcrawler (like google) index your site
    robots=noindex, nofollow

    # if cgit messes up links, use a virtual-root.4
    virtual-root=/

    # if any repositories are found with a suffix of ".git", this suffix will be removed for the url and name.
    remove-suffix=1

    # Highlight source code with python pygments-based highlighter
    source-filter=/usr/lib/cgit/filters/syntax-highlighting.py

    # Format markdown, restructuredtext, manpages, text files, and html files
    # through the right converters
    about-filter=/usr/lib/cgit/filters/about-formatting.sh

    # gravatar email filter
    email-filter=/usr/lib/cgit/filters/email-gravatar.py

    mimetype.gif=image/gif
    mimetype.html=text/html
    mimetype.jpg=image/jpeg
    mimetype.jpeg=image/jpeg
    mimetype.pdf=application/pdf
    mimetype.png=image/png
    mimetype.svg=image/svg+xml

    readme=:README.md
    readme=:readme.md
    readme=:README.mkd
    readme=:readme.mkd
    readme=:README.rst
    readme=:readme.rst
    readme=:README.html
    readme=:readme.html
    readme=:README.htm
    readme=:readme.htm
    readme=:README.txt
    readme=:readme.txt
    readme=:README
    readme=:readme
    readme=:INSTALL.md
    readme=:install.md
    readme=:INSTALL.mkd
    readme=:install.mkd
    readme=:INSTALL.rst
    readme=:install.rst
    readme=:INSTALL.html
    readme=:install.html
    readme=:INSTALL.htm
    readme=:install.htm
    readme=:INSTALL.txt
    readme=:install.txt
    readme=:INSTALL
    readme=:install

    # project-list=kjaleshire/provisioning.git
    scan-path=/data/git/repositories/kjaleshire

  config_nginx: |
    user yaapc;
    worker_processes 4;
    pid /var/run/nginx.pid;
    include /etc/nginx/modules/*.conf;

    events {
      worker_connections 1024;
    }

    http {
      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      keepalive_timeout 65;
      types_hash_max_size 2048;
      server_tokens off;

      client_max_body_size 10m;

      include /etc/nginx/mime.types;
      default_type application/octet-stream;

      access_log /config/log/nginx/access.log;
      error_log /config/log/nginx/error.log;

      server {
        listen                80;
        server_name           _;
        root                  /app;
        try_files             $uri @cgit;

        location @cgit {
          fastcgi_pass        unix:/var/run/fcgiwrap.sock;
          include             /etc/nginx/fastcgi_params;
          fastcgi_param       SCRIPT_FILENAME $document_root/cgit.cgi;
          fastcgi_param       PATH_INFO       $uri;
          fastcgi_param       QUERY_STRING    $args;
          fastcgi_param       HTTP_HOST       $server_name;
        }

        location ~ /.+/(info/refs|git-upload-pack) {
          fastcgi_pass        unix:/run/fcgiwrap.sock;
          include             /etc/nginx/fastcgi_params;
          fastcgi_param       SCRIPT_FILENAME  /usr/libexec/git-core/git-http-backend;
          fastcgi_param       PATH_INFO        $uri;
          fastcgi_param       GIT_PROJECT_ROOT /data/git/repositories/kjaleshire;
        }
      }
    }

    daemon off;
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitea
  namespace: git
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitea
  template:
    metadata:
      labels:
        app: gitea
    spec:
      nodeSelector:
        "openebs.io/nodegroup": "storage-node"
      containers:
        - name: cgit
          image: chruth/alpine-cgit
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: America/New_York
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 10
            timeoutSeconds: 10
          volumeMounts:
            - name: gitea-data-volume
              mountPath: /data
              readOnly: true
            - name: git-config-volume
              mountPath: /files/cgitrc
              subPath: cgitrc
              readOnly: false
            - name: git-config-volume
              mountPath: /files/nginx.conf
              subPath: nginx_conf
              readOnly: false
        - name: gitea
          image: gitea/gitea:1.17.3
          env:
            - name: APP_NAME
              value: Gitea
            - name: RUN_MODE
              value: prod
            - name: SSH_DOMAIN
              value: gitea.flight.kja.us
            - name: SSH_PORT
              value: "2022"
            - name: ROOT_URL
              value: https://gitea.flight.kja.us/
            - name: USER_UID
              value: "1002"
            - name: USER_GID
              value: "1002"
            - name: DB_TYPE
              value: postgres
            - name: DB_HOST
              value: postgres.postgres.svc.cluster.local.:5432
            - name: DB_NAME
              value: giteadb
            - name: DB_USER
              value: gitea
            - name: DB_PASSWD
              valueFrom:
                secretKeyRef:
                  name: gitea-postgres-secret
                  key: password
            - name: SHOW_REGISTRATION_BUTTON
              value: "true"
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
            - containerPort: 2022
              name: ssh
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 3000
            # gitea takes a really long time to restart after an initalization (ORM & indexing)
            initialDelaySeconds: 120
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 25m
              memory: 263M
            limits:
              cpu: 25m
              memory: 263M
          volumeMounts:
            - name: gitea-data-volume
              mountPath: /data
              readOnly: false
      volumes:
        - name: gitea-data-volume
          persistentVolumeClaim:
            claimName: gitea-data-claim
        - name: git-config-volume
          configMap:
            items:
              - key:  config_cgitrc
                path: cgitrc
                mode: 0644
              - key:  config_nginx
                path: nginx_conf
                mode: 0644
            name: git-configmap
